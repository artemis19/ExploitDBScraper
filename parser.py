#!/usr/bin/env python3

import json
import html

# import os
# import glob
# from hashlib import sha256
import csv

all_data = json.load(open("exploitdb_data.json"))

# seen_hashes = []

# final_rows = []
output_file = "./tableau_exploitdb_data.csv"
with open(output_file, "w") as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(
        [
            "Exploit",
            "Year",
            "Month",
            "Day",
            "Tag",
            "Type",
            "Platform",
        ]
    )

    for each_row in all_data:
        data = {}

        data["id"] = int(each_row["id"])
        data["exploit_name"] = html.unescape(each_row["description"][-1])
        data["type"] = each_row["type_id"]
        data["platform"] = each_row["platform_id"]
        data["date"] = each_row["date_published"]
        data["date_year"], data["date_month"], data["date_day"] = [
            int(x) for x in each_row["date_published"].split("-")
        ]

        # Carve out CVE
        if "code" in each_row:
            if each_row["code"]:
                data["cve"] = "CVE-" + each_row["code"][-1]["code"]
            else:
                data["cve"] = "null"
        else:
            data["cve"] = "null"

        # Carve out tags
        if "tags" in each_row:
            if each_row["tags"]:
                data["tag"] = "null"
                for tag in each_row["tags"]:
                    if tag["title"] == "Metasploit Framework (MSF)":
                        continue
                    else:
                        data["tag"] = tag["title"]
            else:
                data["tag"] = "null"
        else:
            data["tag"] = "null"

        writer.writerow(
            [
                data["exploit_name"],
                data["date_year"],
                data["date_month"],
                data["date_day"],
                data["tag"],
                data["type"],
                data["platform"],
            ]
        )

    # file_path = os.path.join(
    #     "exploitdb",
    #     "exploits",
    #     data["platform"].lower(),
    #     data["type"].lower(),
    #     str(data["id"]) + ".*",
    # )

    # file = glob.glob(file_path)
    # if file:
    #     for each_file in file:
    #         data["filename"] = each_file
    #         data["file_extension"] = os.path.splitext(each_file)[-1]
    #         data["file_size"] = os.stat(each_file).st_size
    #         with open(each_file, "rb") as filp:
    #             s = sha256(filp.read())
    #             file_hash = s.hexdigest()
    #             data["sha256"] = file_hash

    # if data["sha256"] in seen_hashes:
    #     continue
    # else:
    #     seen_hashes.append(sha256)

    # if not data["filename"]:
    #     print("WE FOUND A GHOST RECORD")
    #     exit()

    # final_rows.append(data)
    # pprint(data)
print(f"[+] {len(all_data)} exploits written to {output_file}!")
